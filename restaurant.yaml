swagger: "2.0"
info:
  description: "Esta API permite realizar consultas, altas, bajas y modificaciones a todas las entidades que foman parte del sistema de restaurante"
  version: "1.0.0"
  title: "Restaurant"
  contact:
    email: "fmociulsky@yahoo.com.ar"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
schemes:
- "https"
- "http"
paths:
  /usuarios:
    post:
      tags:
      - "usuarios"
      summary: "Agregar un nuevo Usuario al sistema"
      description: ""
      operationId: "crearUsuario"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Usuarios que pueden hacer uso del servicio"
        required: true
        schema:
          $ref: "#/definitions/Usuario"
      responses:
        "200":
          description: "Usuario insertado: username"
        "500":
          description: "Detalle del error"
    get:
      tags:
      - "usuarios"
      summary: "Listado completo de Usuarios"
      operationId: "obtenerUsuarios"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Usuario"
    put:
      tags:
      - "usuarios"
      summary: "Actualiza un Usuario del sistema"
      description: ""
      operationId: "actualizarUsuario"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Usuario que se desea actualizar"
        required: true
        schema:
          $ref: "#/definitions/Usuario"
      responses:
        "200":
          description: "Usuario actualizado: username"
        "400":
          description: "No se realizaron cambios"
  /usuarios/{idUsuario}:
    get:
      tags:
      - "usuarios"
      summary: "Destalle del Usuario"
      operationId: "obtenerUsuario"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "idUsuario"
        in: "path"
        description: "Username del Usuario que se desea obtener"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
              $ref: "#/definitions/Usuario"
    delete:
      tags:
      - "usuarios"
      summary: "Eliminar un usuario"
      operationId: "eliminarUsuario"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "idUsuario"
        in: "path"
        description: "Username del Usuario que se desea eliminar"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
  /usuarios/{idUsuario}/roles:
    get:
      tags:
      - "usuarios"
      summary: "Listado de los roles que tiene asignado un Usuario"
      operationId: "obtenerRolesUsuario"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "idUsuario"
        in: "path"
        description: "Username del Usuario que se desea obtener los roles"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Rol"
  /usuarios/login:
    post:
        tags:
        - "usuarios"
        summary: "Loguear al Usuario en el sistema"
        description: ""
        operationId: "loginUsuario"
        consumes:
        - "application/json"
        - "application/xml"
        produces:
        - "application/xml"
        - "application/json"
        parameters:
        - in: "body"
          name: "body"
          description: "Usuarios que pueden hacer uso del servicio"
          required: true
          schema:
            $ref: "#/definitions/Usuario"
        responses:
          "200":
            description: "{token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9}"
          "500":
            description: "Detalle del error"
  /roles:
    post:
      tags:
      - "roles"
      summary: "Agregar un nuevo Rol al sistema"
      description: ""
      operationId: "crearRol"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Roles que estaran disponibles para los usuarios"
        required: true
        schema:
          $ref: "#/definitions/Rol"
      responses:
        "200":
          description: "Rol insertado: rol"
        "500":
          description: "Detalle del error"
    get:
      tags:
      - "roles"
      summary: "Listado completo de Roles"
      operationId: "obtenerRoles"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Rol"
    put:
      tags:
      - "roles"
      summary: "Actualiza un Rol"
      description: ""
      operationId: "actualizarRol"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Rol que se desea actualizar"
        required: true
        schema:
          $ref: "#/definitions/Rol"
      responses:
        "200":
          description: "Rol actualizado: rol"
        "400":
          description: "No se realizaron cambios"
  /roles/{idRol}:
    get:
      tags:
      - "roles"
      summary: "Detalle del Rol"
      operationId: "obtenerRol"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "idRol"
        in: "path"
        description: "Id del Rol que se desea obtener"
        required: true
        type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
              $ref: "#/definitions/Rol"
    delete:
      tags:
      - "roles"
      summary: "Eliminar un rol"
      operationId: "eliminarRol"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "idRol"
        in: "path"
        description: "Id del Rol que se desea eliminar"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "500":
          description: "El Rol rol no se puede eliminar ya que se encuentra asignado a usuarios"
  /roles/asignar:
    post:
      tags:
      - "roles"
      summary: "Relaciona un Usurio con un Rol"
      description: ""
      operationId: "asignarRol"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Roles que estaran disponibles para los usuarios"
        required: true
        schema:
          $ref: "#/definitions/UsuarioRol"
      responses:
        "200":
          description: "Rol asignado al usuario"
        "500":
          description: "Detalle del error"
  /roles/desasignar:
    post:
      tags:
      - "roles"
      summary: "Remueve la relacion de un Usurio con un Rol"
      description: ""
      operationId: "desasignarRol"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Roles que estaran disponibles para los usuarios"
        required: true
        schema:
          $ref: "#/definitions/UsuarioRol"
      responses:
        "200":
          description: "Rol desasignado al usuario"
        "500":
          description: "El Rol no estaba asignado al usuario"
  /productos:
    post:
      tags:
      - "productos"
      summary: "Agregar un nuevo Producto al sistema"
      description: ""
      operationId: "crearProducto"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Productos que pueden solicitar en los pedidos"
        required: true
        schema:
          $ref: "#/definitions/Producto"
      responses:
        "200":
          description: "Producto insertado: nombre"
        "401":
          description: "El usuario no tiene el rol Administrador"
        "500":
          description: "Detalle del error"
    get:
      tags:
      - "productos"
      summary: "Listado completo de Productos"
      operationId: "obtenerProductos"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Producto"
    put:
      tags:
      - "productos"
      summary: "Actualiza un Producto del sistema"
      description: ""
      operationId: "actualizarProducto"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Producto que se desea actualizar"
        required: true
        schema:
          $ref: "#/definitions/Producto"
      responses:
        "200":
          description: "Producto actualizado: producto"
        "400":
          description: "No se realizaron cambios"
        "401":
          description: "El usuario no tiene el rol Administrador"
  /productos/{idProducto}:
    get:
      tags:
      - "productos"
      summary: "Detalle del Producto"
      operationId: "obtenerProducto"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "idProducto"
        in: "path"
        description: "Id del Producto que se desea obtener"
        required: true
        type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
              $ref: "#/definitions/Producto"
    delete:
      tags:
      - "productos"
      summary: "Eliminar un Producto"
      operationId: "eliminarProducto"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "idProducto"
        in: "path"
        description: "Id del Producto que se desea eliminar"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "401":
          description: "El usuario no tiene el rol Administrador"
        "500":
          description: "El Producto no se puede eliminar ya que se encuentra asignado a un pedido, puede deshabilitarlo"
  /productos/deshabilitar/{idProducto}:
    put:
      tags:
      - "productos"
      summary: "Deshabilitar un Producto para que no pueda ser pedido"
      operationId: "deshabilitarProducto"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "idProducto"
        in: "path"
        description: "Id del Producto que se desea deshabilitar"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Producto deshabilitado"
        "401":
          description: "El usuario no tiene el rol Administrador"
  /productos/habilitar/{idProducto}:
    put:
      tags:
      - "productos"
      summary: "Habilitar un Producto para que no pueda ser pedido"
      operationId: "habilitarProducto"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "idProducto"
        in: "path"
        description: "Id del Producto que se desea habilitar"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Producto shabilitado"
        "401":
          description: "El usuario no tiene el rol Administrador"
  /productos/listarHabilitados:
    get:
      tags:
      - "productos"
      summary: "Listado completo de Productos habilitados"
      operationId: "obtenerProductosHabilitados"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Producto"
  /pedidos:
    post:
      tags:
      - "pedidos"
      summary: "Agregar un nuevo Pedido al sistema"
      description: ""
      operationId: "crearPedido"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pedido que se desea solicitar"
        required: true
        schema:
          $ref: "#/definitions/Pedido"
      responses:
        "200":
          description: "Pedido insertado"
        "500":
          description: "Detalle del error"
    get:
      tags:
      - "pedidos"
      summary: "Listado completo de los Pedidos"
      operationId: "obtenerPedidos"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pedido"
    put:
      tags:
      - "pedidos"
      summary: "Actualiza un Pedido del sistema"
      description: ""
      operationId: "actualizarPedidoo"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pedido que se desea actualizar"
        required: true
        schema:
          $ref: "#/definitions/Pedido"
      responses:
        "200":
          description: "Pedido actualizado"
        "400":
          description: "No se realizaron cambios"
        "401":
          description: "El usuario no tiene el rol Administrador"
  /pedidos/{idPedido}:
    get:
      tags:
      - "pedidos"
      summary: "Detalle del Pedido"
      operationId: "obtenerPedido"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "idPedido"
        in: "path"
        description: "Id del Pedido que se desea obtener"
        required: true
        type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
              $ref: "#/definitions/Pedido"
    delete:
      tags:
      - "pedidos"
      summary: "Eliminar un Pedido"
      operationId: "eliminarPedido"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "idPedido"
        in: "path"
        description: "Id del Pedido que se desea eliminar"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "401":
          description: "El usuario no tiene el rol Administrador"
  /pedidos/cliente/{username}:
    get:
      tags:
      - "pedidos"
      summary: "Listado de Pedidos de un Cliente"
      operationId: "obtenerPedidosCliente"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "Username del Cliente que se desean listar los Pedidos"
        required: true
        type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pedido"
definitions:
  Usuario:
    type: "object"
    properties:
      username:
        type: "string"
      nombre:
        type: "string"
      apellido:
        type: "string"
      activo:
        type: "boolean"
        default: true
    xml:
      name: "Usuario"
  Rol:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      rol:
        type: "string"
      admin:
        type: "boolean"
        default: false
    xml:
      name: "Rol"
  Producto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      nombre:
        type: "string"
      detalle:
        type: "string"
      precio:
        type: "number"
      activo:
        type: "boolean"
        default: true
    xml:
      name: "Producto"
  Pedido:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      idProducto:
        type: "integer"
        format: "int64"
        description: "id del producto pedido"
      username:
        type: "string"
        description: "usuario del cliente que hizo el pedido"
      cantidad:
        type: "integer"
        format: "int64"
      estado:
        type: "number"
        description: "estado del pedido"
        enum:
        - "creado"
        - "en_preparacion"
        - "finalizado"
        - "entregado"
        - "cancelado"
    xml:
      name: "Producto"
  UsuarioRol:
    type: "object"
    properties:
      username:
        type: "string"
      idRol:
        type: "integer"
    xml:
      name: "UsuarioRol"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"